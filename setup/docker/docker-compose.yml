services:

  frontend:
    image: frontend:nginx
    build:
      context: .
      dockerfile: frontendDockerfile
    container_name: frontend
    volumes:
      - ${HOME}/Desktop/42-ft_transcendence/frontend:/var/www/html
    ports:
      - 4242:4242
    restart: unless-stopped
    depends_on:
      - backend

#-------------------------------------------

  backend:
    image: backend:django
    build:
      context: .
      dockerfile: backendDockerfile
    container_name: backend
    volumes:
      - ${HOME}/Desktop/42-ft_transcendence/backend:/app
      - ${HOME}/Desktop/42-ft_transcendence/requirements.txt:/app/requirements.txt
      - backendVolume:/root/.cache/pip/wheels/
    networks:
      - myNet
    restart: unless-stopped
    depends_on:
      - redis
      - postgres

#-------------------------------------------

  redis:
    image: redis:bookworm
    container_name: redis
    networks:
      - myNet
    restart: unless-stopped

#-------------------------------------------

  postgres:
    image: postgres:14.15-alpine
    container_name: postgresql
    environment:
      - POSTGRES_PASSWORD=root
      # - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgresVolume:/var/lib/postgresql/data
      - ./postgres.sh:/docker-entrypoint-initdb.d/postgres.sh
    networks:
      - myNet
    restart: unless-stopped


networks:
  myNet:

volumes:
  postgresVolume:
  backendVolume: