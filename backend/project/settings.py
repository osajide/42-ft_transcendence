"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# print('base_dir: ', BASE_DIR)
MEDIA_ROOT = os.path.dirname(BASE_DIR) + '/frontend/assets/avatars/'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-*c&l8(oh@*_)zir$dx_h*do@za8ak356bac2m7-3@$2ajt!djy'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
# ALLOWED_HOSTS = ["127.0.0.1", "redis", "192.168.1.116"]

AUTH_USER_MODEL = 'authentication.UserAccount'

SITE_ID = 1

# Application definition
SESSION_COOKIE_DOMAIN = None
CSRF_COOKIE_DOMAIN = None

INSTALLED_APPS = [
	'corsheaders',
	'daphne',
	'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'rest_framework',
	'authentication',
	'chat',
	'notification',
	'friend',
	'game',
    'tournament',
    
    # 'social_django',  # Handles social authentication
    # 'rest_framework_social_oauth2',  # DRF OAuth integration

    'django.contrib.sites',
    'rest_framework.authtoken',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

MIDDLEWARE = [
	"corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'
ASGI_APPLICATION = 'project.asgi.application'

# CHANNEL_LAYERS = {
# 	'default': {
# 		'BACKEND': 'channels.layers.InMemoryChannelLayer',
# 	},
# }

CHANNEL_LAYERS = {
	'default': {
		'BACKEND': "channels_redis.core.RedisChannelLayer",
		'CONFIG': {
			'hosts': [("redis", 6379)]
		}
	}
}


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.postgresql',
		'NAME': 'django_database',
		'USER': 'django_user',
		'PASSWORD': '1234',
		'HOST': 'postgresql',
		'PORT': '5432'
	}
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_ALL_ORIGINS = True

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=45),  # Set access token expiration time
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),     # Set refresh token expiration time
    'ROTATE_REFRESH_TOKENS': False,                   # Set whether refresh tokens should be rotated
    'BLACKLIST_AFTER_ROTATION': True,                 # Optionally blacklist tokens after rotation
    'ALGORITHM': 'HS256',                             # JWT algorithm
    'SIGNING_KEY': SECRET_KEY,                        # Secret key to sign the JWT
    'VERIFYING_KEY': None,                            # Public key for verifying JWTs, if using asymmetric signing
}

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # For Gmail
EMAIL_PORT = 587  # 587 for TLS
EMAIL_USE_TLS = True  
EMAIL_USE_SSL = False  
EMAIL_HOST_USER = 'ft.transcendence.13@gmail.com' 
EMAIL_HOST_PASSWORD = 'pswkabcgwtysmjxr'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',  # Default Django backend
    'allauth.account.auth_backends.AuthenticationBackend',
)

SERVICE_PROVIDER = {
    'INTRA': {
        'CLIENT_ID': 'u-s4t2ud-1619f031b401b49c5796f0b7dc500bab1bad5c24ab3c19bb97df8c83adbfc15f',
        'CLIENT_SECRET': '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',
        'REDIRECT_URI': 'https://api.intra.42.fr/oauth/authorize?client_id=u-s4t2ud-1619f031b401b49c5796f0b7dc500bab1bad5c24ab3c19bb97df8c83adbfc15f&redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fadmin&response_type=code',
        'AUTHORIZE_URL': 'https://api.intra.42.fr/oauth/authorize',
        'TOKEN_URL': 'https://api.intra.42.fr/oauth/token',
        'USER_INFO_URL': 'https://api.intra.42.fr/v2/me',
        'SCOPE': 'public',
        'USER_ID_FIELD': 'login',
    }
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        # 'rest_framework_simplejwt.authentication.JWTAuthentication',
        # 'rest_framework_simplejwt.authentication.CookieJWTAuthentication',
        # 'rest_framework_social_oauth2.authentication.SocialAuthentication',
        # Add any other authentication classes if needed
    ),
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.IsAuthenticated',  # Apply IsAuthenticated globally
    # ],
}

CORS_ALLOW_CREDENTIALS=True